kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: cilium-node-init
  labels:
    app: cilium-node-init
spec:
  template:
    metadata:
      labels:
        app: cilium-node-init
    spec:
      tolerations:
      - operator: Exists
      hostPID: true
      hostNetwork: true
      containers:
        - name: node-init
          image: gcr.io/google-containers/startup-script:v1
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          env:
          # MODE defines the managed Kubernetes environment the node-init
          # script is running in.
          #
          # Supported values:
          # - unspec
          # - gke
          # - eks
          - name: MODE
            value: unspec

          # STARTUP_SCRIPT is the script run on node bootstrap. Node
          # bootstrapping can be customized in this script.
          - name: STARTUP_SCRIPT
            value: |
              #!/bin/bash

              set -o errexit
              set -o pipefail
              set -o nounset

              if [[ ! -f /tmp/cilium-installed-v1 ]]; then
                exit
              fi

              echo "Installing BPF filesystem mount"
              cat >/tmp/sys-fs-bpf.mount <<EOF
              [Unit]
              Description=Mount BPF filesystem (Cilium)
              Documentation=http://docs.cilium.io/
              DefaultDependencies=no
              Before=local-fs.target umount.target
              After=swap.target

              [Mount]
              What=bpffs
              Where=/sys/fs/bpf
              Type=bpf

              [Install]
              WantedBy=multi-user.target
              EOF

              if [ -d "/etc/systemd/system/" ]; then
                mv /tmp/sys-fs-bpf.mount /etc/systemd/system/
                echo "Installed sys-fs-bpf.mount to /etc/systemd/system/"
              elif [ -d "/lib/systemd/system/" ]; then
                mv /tmp/sys-fs-bpf.mount /lib/systemd/system/
                echo "Installed sys-fs-bpf.mount to /lib/systemd/system/"
              fi

              systemctl enable sys-fs-bpf.mount
              systemctl start sys-fs-bpf.mount

              # GKE: Alter the kubelet configuration to run in CNI mode
              if [ "$MODE" -eq "gke" ]; then
                echo "Changing kubelet configuration to --network-plugin=cni --cni-bin-dir=/home/kubernetes/bin"
                mkdir -p /home/kubernetes/bin
                sed -i "s:--network-plugin=kubenet:--network-plugin=cni\ --cni-bin-dir=/home/kubernetes/bin:g" /etc/default/kubelet
                echo "Restarting kubelet..."
                systemctl restart kubelet

                if ip link show cbr0; then
                  echo "Detected cbr0 bridge. Deleting interface..."
                  ip link del cbr0
                fi

                # We still need to delete Cilium in case it started before
                # we have changed kubelet configuration. This prevents Cilium
                # from pre-allocating all IP addresses managed by cbr0.
                echo "Restarting possible cilium instances"
                if grep -q 'docker' /etc/crictl.yaml; then
                  # Works for COS, ubuntu
                  docker rm -f $(docker ps -q --filter=label=k8s-app=cilium) || true
                else
                  # COS-beta (with containerd)
                  # currently cilium doesn't work with cos-beta so once it does
                  # we need to figure out a why to delete cilium pods
                  echo "Not implemented for cos-beta, please restart cilium pods"
                  echo "manually!"
                fi
              fi

              echo "Link information:"
              ip link

              echo "Routing table:"
              ip route

              echo "Addressing:"
              ip -4 a
              ip -6 a

              echo "Node initialization complete"
              touch /tmp/cilium-installed-v1
